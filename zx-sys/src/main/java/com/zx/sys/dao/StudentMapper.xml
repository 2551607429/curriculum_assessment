<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zx.sys.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.zx.sys.model.Student" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="stu_id" property="stuId" jdbcType="VARCHAR" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="class_id" property="classId" jdbcType="INTEGER" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="gender" property="gender" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, stu_id, username, password, class_id, telephone, address, gender, name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.zx.sys.model.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from student
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from student
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zx.sys.model.StudentExample" >
    delete from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zx.sys.model.Student" >
    insert into student (id, stu_id, username, 
      password, class_id, telephone, 
      address, gender, name)
    values (#{id,jdbcType=INTEGER}, #{stuId,jdbcType=VARCHAR}, #{username,jdbcType=VARCHAR}, 
      #{password,jdbcType=VARCHAR}, #{classId,jdbcType=INTEGER}, #{telephone,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{gender,jdbcType=CHAR}, #{name,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.zx.sys.model.Student" >
    insert into student
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="classId != null" >
        class_id,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="gender != null" >
        gender,
      </if>
      <if test="name != null" >
        name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="stuId != null" >
        #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        #{classId,jdbcType=INTEGER},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        #{gender,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zx.sys.model.StudentExample" resultType="java.lang.Integer" >
    select count(*) from student
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update student
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=VARCHAR},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null" >
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.classId != null" >
        class_id = #{record.classId,jdbcType=INTEGER},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.gender != null" >
        gender = #{record.gender,jdbcType=CHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update student
    set id = #{record.id,jdbcType=INTEGER},
      stu_id = #{record.stuId,jdbcType=VARCHAR},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      class_id = #{record.classId,jdbcType=INTEGER},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      gender = #{record.gender,jdbcType=CHAR},
      name = #{record.name,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zx.sys.model.Student" >
    update student
    <set >
      <if test="stuId != null" >
        stu_id = #{stuId,jdbcType=VARCHAR},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="classId != null" >
        class_id = #{classId,jdbcType=INTEGER},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="gender != null" >
        gender = #{gender,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zx.sys.model.Student" >
    update student
    set stu_id = #{stuId,jdbcType=VARCHAR},
      username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      class_id = #{classId,jdbcType=INTEGER},
      telephone = #{telephone,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      gender = #{gender,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>




<!--  自定义-->
  <select id="selectByUserName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from student
    where username = #{username,jdbcType=VARCHAR}
  </select>

  <update id="updateInfo" parameterType="map" >
    update student
    set stu_id = #{input.stuId,jdbcType=VARCHAR},
    username = #{input.username,jdbcType=VARCHAR},
    class_id = #{input.classId,jdbcType=INTEGER},
    telephone = #{input.tel,jdbcType=VARCHAR},
    address = #{input.address,jdbcType=VARCHAR},
    gender = #{input.gender,jdbcType=CHAR},
    name = #{input.name,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <update id="updatePwd" parameterType="map" >
    update student
    set password = #{pwd,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectPagination" resultMap="BaseResultMap">
    select *
    from student
    limit ${(page - 1) * count},${page * count}
  </select>

  <select id="selectByTeacher" resultType="java.lang.Integer">
      select s.id
      from student s
               join(
          select c.id
          from class c
                   join (
              select distinct class_id
              from teaching
              where teaching.teacher_id = #{teacherId,jdbcType=INTEGER}
                and (#{date,jdbcType=TIMESTAMP} BETWEEN teaching.start_time and teaching.end_time)
    and teaching.curriculum_id = #{curriculumId,jdbcType=INTEGER}) t
                        on t.class_id = c.id
      ) c
                   on c.id = s.class_id
  </select>

  <select id="selectByClassList" resultType="java.lang.Integer">
      select s.id
    from student s
    where class_id in
    <foreach collection="array" item="item" index="index"
             open="(" close=")" separator=",">
      #{item}
    </foreach>
  </select>

  <select id="selectByClassPagin" resultType="java.lang.Integer">
    select s.id
    from student s
    where class_id in
    <foreach collection="array" item="item" index="index"
             open="(" close=")" separator=",">
      #{item}
    </foreach>
    limit ${(page - 1) * count},${page * count}
  </select>

  <select id="classCount" resultType="java.lang.Integer">
      select count(*)
      from student
      where class_id = #{class_id,jdbcType=INTEGER}
  </select>

</mapper>